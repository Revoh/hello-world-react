{"version":3,"sources":["App.test.js"],"names":["it","div","document","createElement","ReactDOM","render","unmountComponentAtNode","describe","expected","expect","toEqual","stringContaining"],"mappings":";;;;AAAA;;AACA;;AACA;;;AAIAA,EAAE,CAAC,0BAAD,EAA6B,MAAM;AACnC,QAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;;AACAC,oBAASC,MAAT,CAAgB,6BAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAAyBJ,GAAzB;;AACAG,oBAASE,sBAAT,CAAgCL,GAAhC;AACD,CAJC,CAAF,C,CAQA;AACA;AACA;;AAGAM,QAAQ,CAAC,sBAAD,EAAyB,MAAM;AACrC,QAAMC,QAAQ,GAAG,cAAjB;AAEAR,EAAAA,EAAE,CAAC,uEAAD,EAA0E,MAAM;AAChFS,IAAAA,MAAM,CAAC,cAAD,CAAN,CAAuBC,OAAvB,CAA+BD,MAAM,CAACE,gBAAP,CAAwBH,QAAxB,CAA/B;AACD,GAFC,CAAF;AAGD,CANO,CAAR","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nit('renders without crashing', () => {\n  const div = document.createElement('div');\n  ReactDOM.render(<App />, div);\n  ReactDOM.unmountComponentAtNode(div);\n});\n\n\n\n// it('display hello world', () => {\n//   expect(displayHello().toBe('Hello World...!'));\n// });\n\n\ndescribe('not.stringContaining', () => {\n  const expected = 'Hello world!';\n\n  it('matches if the received value does not contain the expected substring', () => {\n    expect('Hello world!').toEqual(expect.stringContaining(expected));\n  });\n});"]}